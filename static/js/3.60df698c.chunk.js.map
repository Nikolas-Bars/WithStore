{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","img/hacker.png","components/Profile/Profile info/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile info/ProfileStatusWithHooks.js","components/Profile/Profile info/ProfileDataForm.js","components/Profile/Profile info/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatusThunk","onChange","e","currentTarget","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","CreateField","Input","required","type","textArea","keys","contacts","map","k","className","s","contact","ProfileInfo","isOwner","savePhoto","saveProfile","Preloader","onEditMode","descriptionBlock","avatar","src","photos","small","hacker","target","files","initialValues","goToEditMode","formData","ProfileData","fullName","onClick","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","Post","imgg","item","message","likes","likeCounts","maxLength","maxLengthCreator","minLength","minLengthCreator","AddNewPostsFormRedux","Field","component","name","placeholder","validate","MyPosts","console","log","postsElement","posts","reverse","p","postsBlock","jopa","addPost","MyPostTextarea","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","updateNewPostText","text","UPTEXTActionCreator","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatusThunk","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.60df698c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/hacker.64da6d60.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__2ibc9\",\"avatar\":\"ProfileInfo_avatar__27d_I\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1lPJM\",\"contact\":\"ProfileInfo_contact__2yXCa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__cTLzv\",\"postsBlock\":\"MyPosts_postsBlock__3KZMf\",\"corners\":\"MyPosts_corners__3avAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1ON9X\",\"imgg\":\"Post_imgg__O9167\",\"likes\":\"Post_likes__POC9y\"};","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks =(props)=> {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () =>{\r\n        setEditMode(true)\r\n    }\r\n    const deActivateMode =()=>{\r\n        setEditMode(false)\r\n        props.updateStatusThunk(status)\r\n    }\r\n    const onStatusChanged =(e)=>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n        return (\r\n    <div>\r\n\r\n        {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>{props.status || '-------'}</span>\r\n            </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input autoFocus={true} onBlur={deActivateMode} onChange={onStatusChanged}  value={status}/>\r\n        </div>\r\n        }\r\n\r\n    </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport {Contact} from \"./ProfileInfo\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport {CreateField, Input, textArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm =({handleSubmit, profile})=>{\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <button>Save</button>\r\n\r\n            <div>\r\n                <b>aFull name:</b>  {CreateField('Full name','fullName', Input,[required])}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Ищу ли я работу?</b> {CreateField(null, 'lookingForAJob', Input, null, {type: 'checkbox'})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills</b> {CreateField('My professional skills', 'lookingForAJobDescription', textArea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Немного обо мне:</b> {CreateField('Немного обо мне:', 'aboutMe', textArea)}\r\n            </div>\r\n            <div>КОНТАКТЫ:\r\n                  <b>{Object.keys(profile.contacts).map(k => {\r\n                    return <div className={s.contact}>\r\n                        <b>{k}{CreateField(k,'contacts.' + k, Input,)}</b>\r\n                    </div>\r\n                } )}</b>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n            {/* <div>КОНТАКТЫ:\r\n                <b>{Object.keys(profile.contacts).map(k => {\r\n                    return <Contact key={k} contactTitle={k} contactValue={profile.contacts[k]}/>\r\n                } )}</b>\r\n            </div>*/}\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport hacker from './../../../img/hacker.png'\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatusThunk, isOwner, savePhoto, saveProfile}) =>{\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile){  //если props.profile = null или undefined\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected =(e)=>{\r\n        if(e.target.files.length > 0){\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onEditMode =()=> {\r\n        setEditMode(!editMode)\r\n    }\r\n    const onSubmit =(formData)=>{\r\n            saveProfile(formData)\r\n            setEditMode(false)\r\n    }\r\n\r\n    return  (\r\n        <div>\r\n            {/* <div>\r\n                <img className={s.img} src=\"https://static.prian.ru/uploads/2021_07/1/20210701133751780428393.jpg\" />\r\n            </div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img className={s.avatar} src={profile.photos.small || hacker}/><br/>\r\n                {isOwner && <input type={'file'}\r\n                                   onChange={onMainPhotoSelected}/>}\r\n\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} goToEditMode={onEditMode} isOwner={isOwner} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} editMode={editMode} goToEditMode={onEditMode} isOwner={isOwner}/>  }\r\n\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk}/>\r\n\r\n             </div>\r\n        </div>\r\n);\r\n}\r\nexport default ProfileInfo;\r\n\r\n\r\nexport const ProfileData =({profile, editMode, goToEditMode, isOwner})=>{\r\n    return(\r\n        <div>\r\n\r\n            <div>\r\n                <b>Full name:</b>  {profile.fullName}  {isOwner && <button onClick={goToEditMode}>editMode</button>}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Немного обо мне:</b>  {profile.aboutMe}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Ищу ли я работу?</b>{profile.lookingForAJob ? <span>      ДА</span> : <span>Нет</span> }\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills</b>{profile.lookingForAJobDescription}\r\n            </div>\r\n\r\n            <div>КОНТАКТЫ:\r\n                <b>{Object.keys(profile.contacts).map(k => {\r\n                    return <Contact key={k} contactTitle={k} contactValue={profile.contacts[k]}/>\r\n                } )}</b>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Contact =({contactTitle, contactValue})=>{\r\n    return (\r\n        <div className={s.contact}>\r\n            {contactTitle}:{contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport s from \"./Post.module.css\"\r\nconst Post = (props) =>{\r\n      return  (\r\n                <div>\r\n                   <img src='https://www.mirf.ru/wp-content/uploads/2020/09/1480331127-2048x1152.jpg' className={s.imgg}/>\r\n                   <div className={s.item}>\r\n                    {props.message} <br/>\r\n                   </div>\r\n                   <div className={s.likes} >\r\n                    {props.likeCounts}<br/><br/>\r\n                   </div>\r\n                    <div>\r\n                        <span></span>\r\n                    </div>\r\n\r\n                </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {textArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nlet maxLength = maxLengthCreator(30)\r\n\r\nlet minLength = minLengthCreator(5)\r\n\r\nfunction MyPosts(props) {             /*в пропсе массив posts который прошел через index - app - profile*/\r\n    console.log('componentDidUpdateYO')\r\n    let postsElement =\r\n        [...props.posts].reverse().map(p => <Post message={p.message} likeCounts={p.likeCounts}/>)\r\n\r\n    let OnAddPost = (jopa) => {\r\n        props.addPost(jopa.MyPostTextarea)\r\n        /*в качестве аргумента будет state.profilePage.newPostText (уже прописано в самой функции в state.js)*/\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddNewPostsFormRedux onSubmit={OnAddPost}/>\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n                {/* <Post message={postsData[0].message} likeCounts={postsData[0].likeCounts}/>\r\n                <Post message={postsData[1].message} likeCounts={postsData[1].likeCounts}/>\r\n                <Post likeCounts={postsData[2].likeCounts} />\r\n                <Post likeCounts={postsData[3].likeCounts} />\r\n                <Post likeCounts={postsData[4].likeCounts} />*/}\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nconst AddNewPostsForm = (props) =>{\r\n\r\n        return(<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n           <Field component={textArea} name={'MyPostTextarea'} placeholder={'Your new post'} validate={[required, maxLength, minLength]} />\r\n        </div>\r\n            <button>Add Post</button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst AddNewPostsFormRedux = reduxForm({form: 'NewPost'})(AddNewPostsForm)\r\n\r\n\r\n\r\nexport default MyPosts;\r\n\r\n{/* <div>\r\n        <textarea ref={newPostsElement} className={s.corners} onChange={onPostChange} value={props.newPostText} />\r\n    </div>\r\n    <div>\r\n        <button className={s.corners} onClick={OnAddPost}>Add Post</button> {/*концепция callback - мы не вызываем ф-ию, а отдаем ее чтобы ее кто-то вызывал*/}\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator, UPTEXTActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{  //vs получили state из store при помощи connect\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        updateNewPostText: (text)=> {\r\n            dispatch(UPTEXTActionCreator(text))\r\n        },\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./Profile info/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    console.log('profile')\r\n\r\n return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer store={props.store} /> {/*state в пропсе ЭТО УЖЕ profilePage -/*передаем в props MyPosts массив posts*/}\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getStatusThunk, getUserProfile, savePhoto, saveProfile, updateStatusThunk} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n\r\n        let userId = this.props.match.params.userId\r\n        if (!userId){ //\r\n            userId = this.props.authorizedUserId\r\n            if(!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatusThunk(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n}\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n        this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     savePhoto={this.props.savePhoto} // savePhoto - это санка\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatusThunk={this.props.updateStatusThunk}\r\n                     saveProfile={this.props.saveProfile}/>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps =(state)=> {\r\n    return{\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(connect (mapStateToProps, {getUserProfile, getStatusThunk, updateStatusThunk, savePhoto, saveProfile}), withRouter)(ProfileContainer);"],"sourceRoot":""}