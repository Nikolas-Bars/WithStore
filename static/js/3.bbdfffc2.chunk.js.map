{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Profile info/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile info/ProfileStatus.js","components/Profile/Profile info/ProfileStatusWithHooks.js","components/Profile/Profile info/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatusThunk","onChange","e","currentTarget","ProfileInfo","profile","className","s","descriptionBlock","avatar","src","photos","small","contacts","facebook","aboutMe","lookingForAJob","Preloader","Post","imgg","item","message","likes","likeCounts","maxLength","maxLengthCreator","minLength","minLengthCreator","AddNewPostsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","textArea","name","placeholder","validate","required","MyPosts","console","log","postsElement","posts","reverse","map","p","postsBlock","jopa","addPost","MyPostTextarea","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","updateNewPostText","text","UPTEXTActionCreator","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatusThunk","compose","auth","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.bbdfffc2.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__2ibc9\",\"avatar\":\"ProfileInfo_avatar__27d_I\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1lPJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__cTLzv\",\"postsBlock\":\"MyPosts_postsBlock__3KZMf\",\"corners\":\"MyPosts_corners__3avAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1ON9X\",\"imgg\":\"Post_imgg__O9167\",\"likes\":\"Post_likes__POC9y\"};","import React from \"react\";\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    ActivateEditMode =()=>{\r\n       this.setState({\r\n           editMode: true\r\n       })\r\n    }\r\n\r\n    deActivateEditMode =()=>{\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatusThunk(this.state.status)\r\n    }\r\n\r\n    oneChange =(e)=>{\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        debugger\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n                {this.state.editMode &&  <input autoFocus={true} onBlur={this.deActivateEditMode} onChange={this.oneChange} value={this.state.status}/>}\r\n                {!this.state.editMode && <span  onDoubleClick={this.ActivateEditMode}>{this.props.status  || '-------'}</span> }\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks =(props)=> {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () =>{\r\n        setEditMode(true)\r\n    }\r\n    const deActivateMode =()=>{\r\n        setEditMode(false)\r\n        props.updateStatusThunk(status)\r\n    }\r\n    const onStatusChanged =(e)=>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n        return (\r\n    <div>\r\n\r\n        {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>{props.status || '-------'}</span>\r\n            </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input autoFocus={true} onBlur={deActivateMode} onChange={onStatusChanged}  value={status}/>\r\n        </div>\r\n        }\r\n\r\n    </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nconst ProfileInfo = ({profile, status, updateStatusThunk}) =>{\r\n\r\n    if (!profile){  //если props.profile = null или undefined\r\n        return <Preloader />\r\n    }\r\n\r\n    return  (\r\n        <div>\r\n            {/* <div>\r\n                <img className={s.img} src=\"https://static.prian.ru/uploads/2021_07/1/20210701133751780428393.jpg\" />\r\n            </div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img className={s.avatar} src={profile.photos.small} /><br/>\r\n                <ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk}/>\r\n\r\n            </div>\r\n            <div>\r\n\r\n                <div>{profile.contacts.facebook}</div>\r\n                <div>Немного обо мне:  {profile.aboutMe}</div>\r\n                <h3>Ищу ли я работу?</h3>{profile.lookingForAJob ? <div>Нет</div> : <div>ДА</div> }\r\n\r\n            </div>\r\n\r\n        </div>\r\n);\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from \"./Post.module.css\"\r\nconst Post = (props) =>{\r\n      return  (\r\n                <div>\r\n                   <img src='https://www.mirf.ru/wp-content/uploads/2020/09/1480331127-2048x1152.jpg' className={s.imgg}/>\r\n                   <div className={s.item}>\r\n                    {props.message} <br/>\r\n                   </div>\r\n                   <div className={s.likes} >\r\n                    {props.likeCounts}<br/><br/>\r\n                   </div>\r\n                    <div>\r\n                        <span></span>\r\n                    </div>\r\n\r\n                </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {textArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nlet maxLength = maxLengthCreator(30)\r\n\r\nlet minLength = minLengthCreator(5)\r\n\r\nfunction MyPosts(props) {             /*в пропсе массив posts который прошел через index - app - profile*/\r\n    console.log('componentDidUpdateYO')\r\n    let postsElement =\r\n        [...props.posts].reverse().map(p => <Post message={p.message} likeCounts={p.likeCounts}/>)\r\n\r\n    let OnAddPost = (jopa) => {\r\n        props.addPost(jopa.MyPostTextarea)\r\n        /*в качестве аргумента будет state.profilePage.newPostText (уже прописано в самой функции в state.js)*/\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddNewPostsFormRedux onSubmit={OnAddPost}/>\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n                {/* <Post message={postsData[0].message} likeCounts={postsData[0].likeCounts}/>\r\n                <Post message={postsData[1].message} likeCounts={postsData[1].likeCounts}/>\r\n                <Post likeCounts={postsData[2].likeCounts} />\r\n                <Post likeCounts={postsData[3].likeCounts} />\r\n                <Post likeCounts={postsData[4].likeCounts} />*/}\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nconst AddNewPostsForm = (props) =>{\r\n\r\n        return(<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n           <Field component={textArea} name={'MyPostTextarea'} placeholder={'Your new post'} validate={[required, maxLength, minLength]} />\r\n        </div>\r\n            <button>Add Post</button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst AddNewPostsFormRedux = reduxForm({form: 'NewPost'})(AddNewPostsForm)\r\n\r\n\r\n\r\nexport default MyPosts;\r\n\r\n{/* <div>\r\n        <textarea ref={newPostsElement} className={s.corners} onChange={onPostChange} value={props.newPostText} />\r\n    </div>\r\n    <div>\r\n        <button className={s.corners} onClick={OnAddPost}>Add Post</button> {/*концепция callback - мы не вызываем ф-ию, а отдаем ее чтобы ее кто-то вызывал*/}\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator, UPTEXTActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{  //vs получили state из store при помощи connect\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        updateNewPostText: (text)=> {\r\n            dispatch(UPTEXTActionCreator(text))\r\n        },\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./Profile info/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    console.log('profile')\r\n\r\n return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n            <MyPostsContainer store={props.store} /> {/*state в пропсе ЭТО УЖЕ profilePage -/*передаем в props MyPosts массив posts*/}\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getStatusThunk, getUserProfile, updateStatusThunk} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId\r\n        if (!userId){ // если userId отсутствует то мы присваиваем ей значение 2\r\n            userId = this.props.authorizedUserId\r\n            if(!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatusThunk(userId)\r\n}\r\n\r\n\r\n\r\n    render(){\r\n         return (\r\n       <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatusThunk={this.props.updateStatusThunk}/>\r\n    );\r\n}}\r\n\r\nlet mapStateToProps =(state)=> {\r\n    return{\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(connect (mapStateToProps, {getUserProfile, getStatusThunk, updateStatusThunk}), withRouter)(ProfileContainer) ;"],"sourceRoot":""}