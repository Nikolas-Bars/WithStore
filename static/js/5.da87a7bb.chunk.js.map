{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirectComponent.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","img","to","id","name","Message","message","maxLength1","maxLengthCreator","AddNewMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","textArea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElement","messages","m","isAuth","dialogsItems","jopa","sendMessage","NewMessage","mapStateToPropsForRedirect","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","DialogsText","sendMessageCreator"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sGCapMC,EAVI,SAACC,GAChB,OACI,sBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UAEKJ,EAAMK,IAFX,KAEiB,cAAC,IAAD,CAASC,GAAI,YAAcN,EAAMO,GAAIN,UAAWC,IAAEC,OAAlD,SAA2DH,EAAMQ,WCK3EC,EATC,SAACT,GAEb,OACI,8BACI,qBAAKC,UAAWC,IAAEQ,QAAlB,SAA4BV,EAAMU,a,iCCHxCC,EAAaC,YAAiB,IAWvBC,EAAyBC,YAAU,CAACC,KAAM,iBAAjBD,EATb,SAACd,GACtB,OAAO,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACH,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,YAAa,OAAQb,KAAM,aAAcc,SAAU,CAACC,IAAUZ,OAE9F,uD,QC2BOa,EA9BC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMD,GAAIuB,EAAEvB,GAAIF,IAAKyB,EAAEzB,SACpF0B,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,aAOlE,OAAIV,EAAMkC,OAGN,sBAAKjC,UAAWC,IAAE0B,QAAlB,UACI,qBAAK3B,UAAWC,IAAEiC,aAAlB,SACKR,IAGL,sBAAK1B,UAAWC,IAAE8B,SAAlB,UACI,8BAAMD,IACP,cAAClB,EAAD,CAAwBG,SAdf,SAACoB,GACjBpC,EAAMqC,YAAYD,EAAKE,qBAGF,cAAC,IAAD,CAAUhC,GAAG,Y,+CChBtCiC,EAA4B,SAACd,GAC7B,MAAM,CACFS,OAAQT,EAAMe,KAAKN,SAgBZO,EAZU,SAACC,GAAc,IAC9BC,EAD6B,4JAE/B,WACI,OAAIC,KAAK5C,MAAMkC,OACR,cAACQ,EAAD,eAAeE,KAAK5C,QADG,cAAC,IAAD,CAAUM,GAAG,eAHhB,GACHuC,IAAMH,WAQtC,OAFmCI,YAAQP,EAARO,CAAoCH,I,QCK5DI,sBACXD,aAhBkB,SAACrB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIH,SAACsB,GACrB,MAAO,CACHX,YAAa,SAACY,GACVD,EAASE,YAAmBD,SAQpCR,EAFWM,CAEOvB","file":"static/js/5.da87a7bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1ZJSl\",\"dialogsItems\":\"Dialogs_dialogsItems__3tZjI\",\"dialog\":\"Dialogs_dialog__2ko6e\",\"active\":\"Dialogs_active__2uS97\",\"messages\":\"Dialogs_messages__3gOP2\",\"message\":\"Dialogs_message__1Wblv\"};","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n\r\n            {props.img}  <NavLink to={'/dialogs/' + props.id} className={s.dialog}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n\r\n/*    let refMessage = React.createRef();\r\n\r\n    let sendMessageElement = () => {\r\n        let send = refMessage.current.value;\r\n        alert(send);\r\n        props.dispatch ({type: 'UPNEWMESSAGEINTEXTAREA', text: \"\"});\r\n    }\r\n\r\n  let addChanged =()=> {\r\n    let text = refMessage.current.value;\r\n      props.dispatch ({type: 'UPNEWMESSAGEINTEXTAREA', text: text});\r\n  }\r\n\r\n  /*  <div>\r\n        <textarea onChange={addChanged} ref={refMessage} value={props.newMessageInTextArea}></textarea>\r\n        <button onClick={sendMessageElement}>Send</button>\r\n    </div>*/\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {textArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength1 = maxLengthCreator(30)\r\n\r\nconst AddNewMessageForm =(props)=>{\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={textArea} placeholder={'jopa'} name={'NewMessage'} validate={[required, maxLength1]}/>\r\n        </div>\r\n        <button>Add Message</button>\r\n    </form>\r\n}\r\n\r\nexport const AddNewMessageFormRedux = reduxForm({form: 'AddNewMessage'})(AddNewMessageForm)","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"../Dialogs/DialogItem/DialogItem\";\r\nimport Message from \"../Dialogs/Message/Message\";\r\nimport {AddNewMessageFormRedux} from \"./Message/AddMessageForm\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} img={d.img}/> );\r\n    let messagesElement = state.messages.map(m => <Message message={m.message} />)\r\n\r\n\r\n    let AddNewMessage = (jopa) =>{\r\n        props.sendMessage(jopa.NewMessage)\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to='/login' />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n               <AddNewMessageFormRedux onSubmit={AddNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;\r\n\r\n/*<div>\r\n    <div><textarea value={newMessageBody} onChange={onNewMessageChange} placeholder = \"enter new message\" /></div>\r\n    <div><button onClick={onSendMessageClick}>Send</button></div>\r\n</div>*/","import React from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect =(state)=> {\r\n    return{\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n    }\r\n    }\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent\r\n}\r\n\r\nexport default withAuthRedirect","import React from 'react'\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirectComponent\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch)=>{\r\n    return {\r\n        sendMessage: (DialogsText)=> {\r\n            dispatch(sendMessageCreator(DialogsText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs);"],"sourceRoot":""}